<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
  
  <!-- this is the service object that we want to make transactional -->
<!--  <bean id="genericService" class="pe.gob.trabajo.pcd.servicio.spring.GenericServiceImpl">-->
<!--  	<property name="dao">-->
<!--		<ref bean="ParametroDAO"/>-->
<!--	</property>-->
<!--  </bean>-->

  <!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> bean below) -->
  <tx:advice id="txAdvice" transaction-manager="txManager">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <!-- all methods starting with 'get' are read-only -->
      <tx:method name="get*" read-only="true" rollback-for="UnsupportedOperationException"/>
<!--      <tx:method name="*cargaEmpresas*" propagation="NOT_SUPPORTED" />-->
      <!-- other methods use the default transaction settings (see below) -->
      <tx:method name="cargaEmpresas*" propagation="NEVER"/>
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>
  
  <tx:advice id="noTxAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="cargaEmpresas*" propagation="NEVER"/>
        </tx:attributes>
    </tx:advice>
  
  <!-- ensure that the above transactional advice runs for any execution
      of an operation defined by the FooService interface -->
  <aop:config>
    <aop:pointcut id="txServiceOperation" expression="execution(* pe.gob.trabajo.pcd.servicio.*.*.*(..))"/>
<!--    <aop:pointcut id="noTxServiceOperation" expression="execution(* pe.gob.trabajo.pcd.servicio.*.MaestroService.*(..))"/>-->
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txServiceOperation"/>
<!--    <aop:advisor advice-ref="noTxAdvice" pointcut-ref="fooServiceOperation" />-->
  </aop:config>
  
  	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
  <!-- don't forget the DataSource -->
<!--  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
<!--    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>-->
<!--    <property name="url" value="jdbc:oracle:thin:@rj-t42:1521:elvis"/>-->
<!--    <property name="username" value="scott"/>-->
<!--    <property name="password" value="tiger"/>-->
<!--  </bean>-->
  <!-- similarly, don't forget the PlatformTransactionManager -->
<!--  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--    <property name="dataSource" ref="dataSource"/>-->
<!--  </bean>-->

<!-- MAESTROS -->
	<bean id="txManagerMaestros" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactoryMaestros" />
		</property>
	</bean>

	<tx:advice id="txAdviceMaestros" transaction-manager="txManagerMaestros">
		<tx:attributes>
			<tx:method name="obtenerMaestroEmpresas" read-only="true" rollback-for="UnsupportedOperationException" />
<!--			<tx:method name="*" />-->
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="maestrosServicios" expression="execution(* pe.gob.trabajo.pcd.servicio.*.MaestroService.*(..))" />
		<aop:advisor advice-ref="txAdviceMaestros" pointcut-ref="maestrosServicios" />
	</aop:config>

</beans>